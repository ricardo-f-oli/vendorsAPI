openapi: 3.0.3
info:
  title: Matrícula Funcionários - OpenAPI 3.0
  description: |-
    API responsible for a complete CRUD of vendors
  termsOfService: http://swagger.io/terms/
  contact:
    email: ricardo.fer.oliveira964@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
servers:
  - url: localhost:8080/v1
tags:
  - name: vendor
    description: Everything about vendors
paths:
  /{id}:
    put:
      tags:
        - vendor
      summary: Update an existing vendor
      description: Update an existing vendor by Id
      operationId: updateVendor
      parameters:
        - name: id
          in: path
          description: id of the vendor to be updated
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existent vendor in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VendorRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/VendorRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VendorRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/VendorResponse'
        '400':
          description: Invalid ID supplied
        '404':
          description: Vendor not found
        '422':
          description: Validation exception
      security:
        - petstore_auth:
            - write:vendor
            - read:vendor
  /vendor:
    post:
      tags:
        - vendor
      summary: Add a new vendor to the store
      description: Add a new vendor to the store
      operationId: addVendor
      requestBody:
        description: Create a new vendor in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VendorRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/VendorRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VendorRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/VendorResponse'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
      security:
        - petstore_auth:
            - write:vendor
            - read:vendor
  /vendor/findByContractType:
    get:
      tags:
        - vendor
      summary: Find vendors by contract type
      description: Multiple vendors can be found by contract type.
      operationId: findVendorsByContractType
      parameters:
        - name: contractType
          in: query
          description: contract type of vendors
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VendorResponse'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VendorResponse'
        '400':
          description: Invalid branch name
      security:
        - petstore_auth:
            - write:vendor
            - read:vendor
  /vendor/{registration}:
    get:
      tags:
        - vendor
      summary: Find vendor by registration
      description: Returns a single pet
      operationId: getVendorByRegistrarion
      parameters:
        - name: registration
          in: path
          description: registration of vendor to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/VendorResponse'
        '400':
          description: Invalid registration supplied
        '404':
          description: vendor not found
      security:
        - api_key: []
        - petstore_auth:
            - write:vendor
            - read:vendor
    delete:
      tags:
        - vendor
      summary: Deletes a vendor
      description: delete a vendor
      operationId: deleteVendor
      parameters:
        - name: api_key
          in: header
          description: ''
          required: false
          schema:
            type: string
        - name: registration
          in: path
          description: Vendor registration to delete
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid vendor registration
      security:
        - petstore_auth:
            - write:vendor
            - read:vendor
components:
  schemas:
    Branch:
      required:
        - id
        - name
        - document
        - city
        - UF
        - type
        - active
        - registerDate
        - lastUpdateDate
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: "FilialNorte"
        document:
          type: string
          example: "12345678000195"
        city:
          type: string
          example: "São Paulo"
        UF:
          type: string
          example: "SP"
        type:
          type: string
          example: "Matriz"
        active:
          type: boolean
          example: true
        registerDate:
          type: string
          example: "01-08-2024"
        lastUpdateDate:
          type: string
          example: "10-08-2024"
      xml:
        name: branch
    VendorResponse:
      required:
        - id
        - registration
        - name
        - document
        - email
        - contractType
        - branch
      properties:
        id:
          type: integer
          format: int64
          example: 10
        registration:
          type: string
          example: 98767367-OUT
        name:
          type: string
          example: John
        birthday:
          type: string
          example: "01-01-2017"
        document:
          type: string
          example: "CPF ou CNPJ"
        email:
          type: string
          example: "rese@email.com"
        contractType:
          type: string
          description: vendor type in the store
          enum:
            - outsourcing
            - clt
            - pj
        branch:
          $ref: '#/components/schemas/Branch'
    VendorRequest:
      required:
        - name
        - document
        - email
        - contractType
        - branch
      type: object
      properties:
        name:
          type: string
          example: John
        birthday:
          type: string
          example: "01-01-2017"
        document:
          type: string
          example: "CPF ou CNPJ"
        email:
          type: string
          example: "rese@email.com"
        contractType:
          type: string
          description: vendor type in the store
          enum:
            - outsourcing
            - clt
            - pj
        branch:
          type: string
          description: branch name
          example: "branch name"
      xml:
        name: vendor
  requestBodies:
    VendorRequest:
      description: vendor object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VendorRequest'
        application/xml:
          schema:
            $ref: '#/components/schemas/VendorRequest'
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header